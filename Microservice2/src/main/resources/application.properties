spring.application.name=MICROSERVICE2
eureka.client.service-url.defaultZone=http://localhost:8761/eureka
#When your Eureka client registers with the Eureka server, it will use its IP address instead of its hostname.
eureka.instance.prefer-ip-address=true
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
server.port=8081

management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
# to see circuitbreaker status in actuator
management.health.circuitbreakers.enabled=true

# to use circuitbreaker in feign client
feign.circuitbreaker.enabled=true

#Registers a health indicator for the circuit breaker, allowing monitoring tools (e.g., Spring Boot Actuator) to check the status of the circuit breaker.
resilience4j.circuitbreaker.configs.default.registerHealthIndicator=true

#Tracks the last 10 requests to determine the failure rate.
resilience4j.circuitbreaker.configs.default.slidingWindowSize=10

#If 50% or more of the requests fail (exceptions), the circuit breaker transitions to OPEN state.
resilience4j.circuitbreaker.configs.default.failureRateThreshold=50

#When the circuit is OPEN, it remains open for 10 seconds before trying to switch to HALF-OPEN.
resilience4j.circuitbreaker.configs.default.waitDurationInOpenState=10s

#In HALF-OPEN state, only 3 test requests are allowed. If they succeed, the circuit closes. If failures persist, it goes back to OPEN.
resilience4j.circuitbreaker.configs.default.permittedNumberOfCallsInHalfOpenState=3

#@FeignClient(name = "MICROSERVICE1", fallback = Microservice1Fallback.class) name should match with line 34
#Microservice 2 uses this default configuration when calling Microservice1.
resilience4j.circuitbreaker.instances.MICROSERVICE1.baseConfig=default
