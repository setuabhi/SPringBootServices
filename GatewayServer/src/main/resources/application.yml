server:
  port: 8082  # Port for the API Gateway
#  security:
#    oauth2:
#      resource-server:
#        jwt:
#          jwk-set-uri: https://your-issuer.com/oauth2/jwks aUTHENTICATION

spring:
  redis:
    host: localhost
    port: 6379
  application:
    name: api-gateway
  cloud:
    gateway:
      routes:
        - id: microservice1-route
          uri: lb://MICROSERVICE1 # Use the service name registered in Eureka
          predicates:
            - Path=/api/** # Path to route requests to Microservice 1 (entry point of MICROSERVICE1)
            - RemoteAddr=127.0.0.1/32 # allow only localhost IPs
          filters:
            - name: RequestRateLimiter #Filter name
              args:
                redis-rate-limiter.replenishRate: 10 #means 10 requests per second are allowed
                redis-rate-limiter.burstCapacity: 20 #At any moment, up to 20 requests can be allowed instantly if the bucket is full.
                redis-rate-limiter.requestedToken: 1 #Each request takes 1 token. So, the bucket is depleted by 1 token per request.

        - id: microservice2-route
          uri: lb://MICROSERVICE2 # Use the service name registered in Eureka
          predicates:
            - Path=/web/** # Path to route requests to Microservice 2 (entry point of MICROSERVICE2)

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/ # URL of the Eureka Server
  instance:
    prefer-ip-address: true #When your Eureka client registers with the Eureka server, it will use its IP address instead of its hostname.
